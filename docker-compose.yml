services:
  traefik:
    container_name: traefik
    image: traefik:v2.2
    command:
      - --entrypoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --providers.docker
      - --api
      - --api.insecure=true
      - --accesslog=true
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./conf/traefik/dynamic:/etc/traefik/dynamic:ro
      - ./certs:/etc/certs:ro
    labels:
      # Конфиг дешборда
      - traefik.http.routers.api.rule=Host(`traefik.dock`)
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls=true
    networks:
      - traefik
    restart: always
    depends_on:
      - portainer
  portainer:
    image: portainer/portainer-ce:2.33.1-alpine
    restart: always
    expose:
      - 9000
    networks:
      - traefik
    labels:
      - traefik.enable=true
      # HTTP
      - traefik.http.routers.portainer.rule=Host(`portainer.dock`)
      - traefik.http.routers.portainer.entrypoints=web
      - traefik.http.routers.portainer.service=portainer-svc
      # HTTPS
      - traefik.http.routers.portainer-secure.rule=Host(`portainer.dock`)
      - traefik.http.routers.portainer-secure.entrypoints=websecure
      - traefik.http.routers.portainer-secure.tls=true
      - traefik.http.routers.portainer-secure.service=portainer-svc
      # Общий сервис
      - traefik.http.services.portainer-svc.loadbalancer.server.port=9000
      - traefik.docker.network=traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
networks:
  traefik:
    external: true
volumes:
  portainer_data:
    driver: local
